{"version":3,"file":"node-build.mjs","sources":["../../server/routes/demo.ts","../../server/routes/rum.ts","../../server/utils/browser-pool.ts","../../server/utils/pdf-cache.ts","../../server/routes/pdf-generator.ts","../../server/index.ts","../../server/node-build.ts"],"sourcesContent":["import { RequestHandler } from \"express\";\nimport { DemoResponse } from \"@shared/api\";\n\nexport const handleDemo: RequestHandler = (req, res) => {\n  const response: DemoResponse = {\n    message: \"Hello from Express server\",\n  };\n  res.status(200).json(response);\n};\n","import { RequestHandler } from \"express\";\n\ninterface RumMetricEvent {\n  name: \"TTFB\" | \"FCP\" | \"LCP\" | \"CLS\" | \"FID\";\n  value: number;\n  id: string;\n  ts: number;\n}\n\nconst buffer: RumMetricEvent[] = [];\n\nexport const postRum: RequestHandler = (req, res) => {\n  const evt = req.body as RumMetricEvent | undefined;\n  if (!evt || typeof evt.name !== \"string\" || typeof evt.value !== \"number\") {\n    res.status(400).json({ ok: false });\n    return;\n  }\n  buffer.push(evt);\n  // cap at 5000 events\n  if (buffer.length > 5000) buffer.splice(0, buffer.length - 5000);\n  res.json({ ok: true });\n};\n\nexport const getRum: RequestHandler = (_req, res) => {\n  res.json({ events: buffer });\n};\n\nexport const getRumSummary: RequestHandler = (_req, res) => {\n  const map = new Map<string, { count: number; sum: number; min: number; max: number }>();\n  for (const e of buffer) {\n    const m = map.get(e.name) ?? { count: 0, sum: 0, min: Number.POSITIVE_INFINITY, max: 0 };\n    m.count++;\n    m.sum += e.value;\n    m.min = Math.min(m.min, e.value);\n    m.max = Math.max(m.max, e.value);\n    map.set(e.name, m);\n  }\n  const summary = Array.from(map.entries()).map(([name, s]) => ({\n    name,\n    count: s.count,\n    avg: s.sum / s.count,\n    min: s.min,\n    max: s.max,\n  }));\n  res.json({ summary });\n};\n","import puppeteer, { Browser, Page } from \"puppeteer\";\n\nclass BrowserPool {\n  private static instance: BrowserPool;\n  private browser: Browser | null = null;\n  private isInitializing = false;\n  private initPromise: Promise<void> | null = null;\n\n  private constructor() {}\n\n  static getInstance(): BrowserPool {\n    if (!BrowserPool.instance) {\n      BrowserPool.instance = new BrowserPool();\n    }\n    return BrowserPool.instance;\n  }\n\n  async initialize(): Promise<void> {\n    if (this.browser || this.isInitializing) {\n      return this.initPromise || Promise.resolve();\n    }\n\n    this.isInitializing = true;\n    this.initPromise = this._initialize();\n    return this.initPromise;\n  }\n\n  private async _initialize(): Promise<void> {\n    try {\n      console.log(\"Initializing browser pool...\");\n      this.browser = await puppeteer.launch({\n        headless: true,\n        args: [\n          \"--no-sandbox\",\n          \"--disable-setuid-sandbox\",\n          \"--disable-dev-shm-usage\",\n          \"--disable-accelerated-2d-canvas\",\n          \"--no-first-run\",\n          \"--no-zygote\",\n          \"--disable-gpu\",\n          \"--disable-background-timer-throttling\",\n          \"--disable-backgrounding-occluded-windows\",\n          \"--disable-renderer-backgrounding\",\n          \"--disable-features=TranslateUI\",\n          \"--disable-ipc-flooding-protection\",\n          \"--disable-extensions\",\n          \"--disable-default-apps\",\n          \"--disable-background-networking\",\n          \"--disable-sync\",\n          \"--metrics-recording-only\",\n          \"--no-default-browser-check\",\n          \"--mute-audio\",\n          \"--disable-web-security\",\n        ],\n      });\n      await setTimeout(() => {}, 1000); // Wait for a second to ensure browser is ready\n      console.log(\"Browser pool initialized\");\n    } catch (error) {\n      console.error(\"Failed to initialize browser pool:\", error);\n      throw error;\n    } finally {\n      this.isInitializing = false;\n    }\n  }\n\n  async getPage(): Promise<Page> {\n    await this.initialize();\n\n    if (!this.browser) {\n      throw new Error(\"Browser not initialized\");\n    }\n\n    const page = await this.browser.newPage();\n\n    // Optimize page for fast PDF generation\n    await page.setViewport({ width: 1000, height: 700 });\n\n    // Disable loading of unnecessary resources\n    await page.setRequestInterception(true);\n    page.on(\"request\", (req) => {\n      const resourceType = req.resourceType();\n      if (\n        [\"image\", \"media\", \"font\", \"other\", \"websocket\"].includes(resourceType)\n      ) {\n        req.abort();\n      } else {\n        req.continue();\n      }\n    });\n\n    // Disable JavaScript execution for faster rendering (static content only)\n    await page.setJavaScriptEnabled(true);\n\n    return page;\n  }\n\n  async releasePage(page: Page): Promise<void> {\n    try {\n      // Add a delay to pause the browser before closing the page\n      await new Promise((resolve) => setTimeout(resolve, 5000)); // 5-second delay\n      // await page.close();\n    } catch (error) {\n      console.error(\"Error closing page:\", error);\n    }\n  }\n\n  async shutdown(): Promise<void> {\n    if (this.browser) {\n      await this.browser.close();\n      this.browser = null;\n      this.isInitializing = false;\n      this.initPromise = null;\n    }\n  }\n}\n\nexport const browserPool = BrowserPool.getInstance();\n\n// Graceful shutdown\nprocess.on(\"SIGINT\", async () => {\n  console.log(\"Shutting down browser pool...\");\n  await browserPool.shutdown();\n  process.exit(0);\n});\n\nprocess.on(\"SIGTERM\", async () => {\n  console.log(\"Shutting down browser pool...\");\n  await browserPool.shutdown();\n  process.exit(0);\n});\n","import crypto from \"crypto\";\nimport { LRUCache } from \"lru-cache\";\n\ninterface CachedPDF {\n  buffer: Buffer;\n  contentType: string;\n  filename: string;\n  timestamp: number;\n}\n\nclass PDFCache {\n  private static instance: PDFCache;\n  private cache: LRUCache<string, CachedPDF>;\n\n  private constructor() {\n    // Configure cache with 50MB max size and 3 seconds TTL\n    this.cache = new LRUCache<string, CachedPDF>({\n      max: 20, // Maximum 20 PDFs in cache\n      ttl: 1000 * 3, // 3 seconds TTL\n      maxSize: 50 * 1024 * 1024, // 50MB max cache size\n      sizeCalculation: (value) => value.buffer.length,\n      dispose: (value) => {\n        console.log(`Evicting cached PDF: ${value.filename}`);\n      },\n    });\n  }\n\n  static getInstance(): PDFCache {\n    if (!PDFCache.instance) {\n      PDFCache.instance = new PDFCache();\n    }\n    return PDFCache.instance;\n  }\n\n  generateKey(html: string, css: string, options: any): string {\n    const content = JSON.stringify({ html, css, options });\n    return crypto\n      .createHash(\"sha256\")\n      .update(content)\n      .digest(\"hex\")\n      .substring(0, 16);\n  }\n\n  get(key: string): CachedPDF | undefined {\n    const cached = this.cache.get(key);\n    if (cached) {\n      console.log(`Cache hit for key: ${key}`);\n      return cached;\n    }\n    console.log(`Cache miss for key: ${key}`);\n    return undefined;\n  }\n\n  set(key: string, pdf: CachedPDF): void {\n    this.cache.set(key, pdf);\n    console.log(\n      `Cached PDF with key: ${key}, size: ${pdf.buffer.length} bytes`,\n    );\n  }\n\n  clear(): void {\n    this.cache.clear();\n    console.log(\"PDF cache cleared\");\n  }\n\n  getStats(): { size: number; maxSize: number; itemCount: number } {\n    return {\n      size: this.cache.calculatedSize || 0,\n      maxSize: this.cache.maxSize || 0,\n      itemCount: this.cache.size,\n    };\n  }\n}\n\nexport const pdfCache = PDFCache.getInstance();\n","import { RequestHandler } from \"express\";\nimport { PDFGenerationRequest, PDFGenerationResponse } from \"@shared/api\";\nimport { browserPool } from \"../utils/browser-pool\";\nimport { pdfCache } from \"../utils/pdf-cache\";\n\n/**\n * Generate PDF from HTML content using Puppeteer\n * This runs server-side to avoid blocking the client and provide optimal RUM scores\n */\nexport const generatePDF: RequestHandler = async (req, res) => {\n  const startTime = Date.now();\n  let page;\n\n  try {\n    const {\n      html,\n      css,\n      title = \"RUM Dashboard\",\n      format = \"A4\",\n      orientation = \"portrait\",\n      compress = true,\n      quality = \"high\",\n      cssOnly = false,\n    } = req.body as PDFGenerationRequest;\n\n    if (!html) {\n      const errorResponse: PDFGenerationResponse = {\n        success: false,\n        error: \"HTML content is required\",\n      };\n      return res.status(400).json(errorResponse);\n    }\n\n    // Check cache first\n    const cacheKey = pdfCache.generateKey(html, css, {\n      format,\n      orientation,\n      compress,\n      quality,\n    });\n    const cached = pdfCache.get(cacheKey);\n\n    if (cached) {\n      console.log(`Serving cached PDF in ${Date.now() - startTime}ms`);\n      res.setHeader(\"Content-Type\", cached.contentType);\n      res.setHeader(\n        \"Content-Disposition\",\n        `attachment; filename=\"${cached.filename}\"`,\n      );\n      res.setHeader(\"Content-Length\", cached.buffer.length);\n      return res.send(cached.buffer);\n    }\n\n    console.log(\"Cache miss, generating new PDF...\");\n    console.log(\"Getting page from browser pool...\");\n    page = await browserPool.getPage();\n    console.log(`Page acquired in ${Date.now() - startTime}ms`);\n\n    try {\n      // Prepare optimized CSS\n      const optimizedCSS = css\n        .replace(/\\/\\*[\\s\\S]*?\\*\\//g, \"\") // Remove comments\n        .replace(/\\s+/g, \" \") // Compress whitespace\n        .replace(/;\\s*}/g, \"}\") // Remove unnecessary semicolons\n        .replace(/{\\s*/g, \"{\") // Remove space after {\n        .replace(/;\\s*/g, \";\") // Compress around semicolons\n        .trim();\n\n      if (cssOnly) {\n        console.log(\"CSS-only mode enabled, sending optimized CSS...\");\n        res.setHeader(\"Content-Type\", \"text/css\");\n        res.setHeader(\n          \"Content-Length\",\n          Buffer.byteLength(optimizedCSS, \"utf-8\"),\n        );\n        return res.send(optimizedCSS);\n      }\n\n      // Add a robust CSS style tag to force color for all elements\n      const colorOverrideCss = `\n        * {\n          -webkit-print-color-adjust: exact !important;\n          color-adjust: exact !important;\n          background-color: inherit !important;\n        }\n          .grid {\n          display: block !important;\n          grid-template-columns: unset !important;\n          gap: unset !important;\n        }\n        @media print {\n          * {\n            -webkit-print-color-adjust: exact !important;\n            color-adjust: exact !important;\n            box-shadow: none !important;\n          }\n          @page { margin: 0.3in; size: ${format}; }\n        }\n        .print\\\\:hidden { display: none !important; }\n        img, svg { max-width: 100%; height: auto; }\n        table { font-size: 11px; }\n        .recharts-wrapper { transform: scale(1); }\n      `;\n\n      // Prepare the complete HTML document\n      const fullHtml = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n<title>${title}</title>\n<meta name=\"author\" content=\"Your Author Name\">\n<meta name=\"description\" content=\"Description of the document for accessibility\">\n<meta name=\"keywords\" content=\"PDF, Accessibility, UA-PDF, Puppeteer\">\n<meta name=\"generator\" content=\"Puppeteer PDF Generator\">\n<style>\n${optimizedCSS}\n${colorOverrideCss}\nbody {\n  margin: 0;\n  padding: 15px;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n  font-size: 12px;\n  line-height: 1.4;\n}\n  .grid {\n  display: block !important;\n}\n  .text-muted-foreground{\n  color: red !important;\n  }\n</style>\n</head>\n<body>${html}</body>\n</html>`;\n\n      // Set the HTML content with a longer timeout for complex pages\n      await page.setContent(fullHtml, {\n        waitUntil: \"networkidle0\", // Better for complex pages\n        timeout: 30000,\n      });\n      console.log(`Content set in ${Date.now() - startTime}ms`);\n\n      // Emulate the 'screen' media type to ensure color rendering, then wait\n      await page.emulateMediaType(\"screen\");\n      await new Promise((resolve) => setTimeout(resolve, 500)); // A more generous wait for rendering\n\n      console.log(\"Starting PDF generation...\");\n      const settings = {\n        high: { scale: 1.0, margin: \"15px\" },\n        medium: { scale: 0.85, margin: \"10px\" },\n        low: { scale: 0.7, margin: \"8px\" },\n      };\n      const qualitySetting = settings[quality] || settings.medium;\n\n      // Generate PDF with required options\n      const pdfBuffer = await page.pdf({\n        format: format as any,\n        landscape: orientation === \"landscape\",\n        printBackground: true,\n        preferCSSPageSize: true,\n        displayHeaderFooter: false,\n        margin: {\n          top: qualitySetting.margin,\n          right: qualitySetting.margin,\n          bottom: qualitySetting.margin,\n          left: qualitySetting.margin,\n        },\n        tagged: true,\n        omitBackground: false,\n        scale: compress ? qualitySetting.scale : 1.0,\n      });\n\n      await browserPool.releasePage(page);\n      console.log(`PDF generated successfully in ${Date.now() - startTime}ms`);\n\n      const contentType = \"application/pdf\";\n      const filename = `${title.replace(/\\s+/g, \"_\")}_${Date.now()}.pdf`;\n\n      res.setHeader(\"Content-Type\", contentType);\n      res.setHeader(\n        \"Content-Disposition\",\n        `attachment; filename=\"${filename}\"`,\n      );\n      res.setHeader(\"Content-Length\", pdfBuffer.length);\n\n      pdfCache.set(cacheKey, {\n        buffer: pdfBuffer,\n        contentType,\n        filename,\n        timestamp: Date.now(),\n      });\n\n      res.send(pdfBuffer);\n    } catch (pageError) {\n      if (page) {\n        await browserPool.releasePage(page);\n      }\n      throw pageError;\n    }\n  } catch (error) {\n    console.error(\"PDF generation error:\", error);\n    console.log(`PDF generation failed in ${Date.now() - startTime}ms`);\n\n    if (page) {\n      try {\n        await browserPool.releasePage(page);\n      } catch (cleanupError) {\n        console.error(\"Error during page cleanup:\", cleanupError);\n      }\n    }\n\n    const errorResponse: PDFGenerationResponse = {\n      success: false,\n      error:\n        error instanceof Error\n          ? error.message\n          : \"Unknown error occurred during PDF generation\",\n    };\n\n    res.status(500).json(errorResponse);\n  }\n};\n\n/**\n * Health check endpoint for PDF service\n */\nexport const pdfHealthCheck: RequestHandler = async (req, res) => {\n  try {\n    await browserPool.initialize();\n    res.json({\n      success: true,\n      message: \"PDF service is healthy and optimized\",\n      timestamp: new Date().toISOString(),\n    });\n  } catch (error) {\n    res.status(503).json({\n      success: false,\n      error: \"PDF service unavailable\",\n      details: error instanceof Error ? error.message : \"Unknown error\",\n    });\n  }\n};\n","import \"dotenv/config\";\nimport express from \"express\";\nimport cors from \"cors\";\nimport { handleDemo } from \"./routes/demo\";\nimport { getRum, getRumSummary, postRum } from \"./routes/rum\";\nimport { generatePDF, pdfHealthCheck } from \"./routes/pdf-generator\";\n\nexport function createServer() {\n  const app = express();\n\n  // Middleware - Allow all origins for POC\n  app.use(cors({\n    origin: true, // Allow all origins\n    credentials: true,\n    methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n    allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With']\n  }));\n  app.use(express.json({ limit: '100mb' })); // Increase limit for large CSS content\n  app.use(express.urlencoded({ extended: true, limit: '100mb' }));\n\n  // Example API routes\n  app.get(\"/api/ping\", (_req, res) => {\n    const ping = process.env.PING_MESSAGE ?? \"ping\";\n    res.json({ message: ping });\n  });\n\n  app.get(\"/api/demo\", handleDemo);\n\n  // RUM endpoints\n  app.post(\"/api/rum\", postRum);\n  app.get(\"/api/rum\", getRum);\n  app.get(\"/api/rum/summary\", getRumSummary);\n\n  // PDF generation endpoints\n  app.post(\"/api/generate-pdf\", generatePDF);\n  app.get(\"/api/pdf-health\", pdfHealthCheck);\n\n  return app;\n}\n","import path from \"path\";\nimport { fileURLToPath } from 'url';\nimport { createServer } from \"./index\";\nimport * as express from \"express\";\n\nconst app = createServer();\nconst port = process.env.PORT || 3000;\n\n// In production, serve the built SPA files\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\nconst distPath = path.join(__dirname, \"../spa\");\n\n// Serve static files\napp.use(express.static(distPath));\n\n// Handle React Router - serve index.html for all non-API routes\napp.get(\"*\", (req, res) => {\n  // Don't serve index.html for API routes\n  if (req.path.startsWith(\"/api/\") || req.path.startsWith(\"/health\")) {\n    return res.status(404).json({ error: \"API endpoint not found\" });\n  }\n\n  res.sendFile(path.join(distPath, \"index.html\"));\n});\n\napp.listen(port, () => {\n  console.log(`🚀 Fusion Starter server running on port ${port}`);\n  console.log(`📱 Frontend: http://localhost:${port}`);\n  console.log(`🔧 API: http://localhost:${port}/api`);\n});\n\n// Graceful shutdown\nprocess.on(\"SIGTERM\", () => {\n  console.log(\"🛑 Received SIGTERM, shutting down gracefully\");\n  process.exit(0);\n});\n\nprocess.on(\"SIGINT\", () => {\n  console.log(\"🛑 Received SIGINT, shutting down gracefully\");\n  process.exit(0);\n});\n"],"names":["app","express"],"mappings":"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"}